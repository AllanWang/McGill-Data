buildscript {
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "ca.allanwang:kit:$KIT"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$KOTLIN"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$SPRING_BOOT"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$JUNIT_PLATFORM"
    }
    wrapper.setDistributionType(Wrapper.DistributionType.ALL)
}

apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'ca.allanwang.kit'

sourceCompatibility = kit.jvm

repositories {
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    maven { url "https://jitpack.io" }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$KOTLIN"
    compile "org.postgresql:postgresql:$POSTGRESQL"

    compile "ca.allanwang.kit:logger:$KIT"
    compile "ca.allanwang.kit:props:$KIT"

    testCompile kitDependency.kotlinTest
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'org.junit.platform.gradle.plugin'

    group "ca.allanwang.mcgill"
    version VERSION

    repositories {
        maven { url "https://dl.bintray.com/kotlin/exposed" }
        maven { url "https://jitpack.io" }
        mavenCentral()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    test {
        useJUnitPlatform()
        dependsOn cleanTest
        testLogging {
            events "PASSED", "FAILED", "SKIPPED"
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }

    dependencies {
        implementation kitDependency.kotlin

        testImplementation kitDependency.kotlinTest
        testImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT"
//        if (it.name != 'test')

    }

    compileKotlin {
        kotlinOptions.jvmTarget = kit.jvm
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = kit.jvm
    }

}